kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${NAME}${SUFFIX}-deployment-template
  annotations:
    description: Deployment template for a django server connected to a PostGreSQL database.
    tags: django
    iconClass: icon-python
objects:

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the agent and frontend to access the controller.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${AGENT_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
            - podSelector:
                matchLabels:
                  role: ${FRONTEND_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: 8080
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${EMAIL_SETTINGS_STORE_NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      target-email: ${FEEDBACK_TARGET_EMAIL}
      smtp-host: ${SMTP_SERVER_ADDRESS}
    type: Opaque

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      api-user: ${USER_ID}
      api-password: ${USER_PASSWORD}
      admin-user: ${ADMIN_USER_ID}
      admin-password: ${ADMIN_PASSWORD}
    type: Opaque

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_HOST}", "kind": "Service"},{"name": "${SOLR_HOST}", "kind": "Service"}]'
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}${SUFFIX}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      annotations:
        description: Defines how to deploy the application server
        app.openshift.io/connects-to: >-
          [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${AGENT_HOST}${SUFFIX}"},
          {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${DATABASE_HOST}${SUFFIX}"},
          {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${MSG_QUEUE_HOST}${SUFFIX}"},
          {"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"${SOLR_HOST}${SUFFIX}"}]
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              image: " "
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 30
                initialDelaySeconds: 3
                timeoutSeconds: 40
                httpGet:
                  path: /health
                  port: 8080
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 60
                initialDelaySeconds: 30
                timeoutSeconds: 40
                httpGet:
                  path: /health
                  port: 8080
              env:
                - name: APP_FILE
                  value: ${APP_FILE}
                - name: APP_CONFIG
                  value: ${APP_CONFIG}
                - name: APP_MODULE
                  value: ${APP_MODULE}
                - name: DATABASE_SERVICE_NAME
                  value: ${DATABASE_HOST}${SUFFIX}
                - name: DATABASE_ENGINE
                  value: ${DATABASE_ENGINE}
                - name: DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_HOST}${SUFFIX}
                      key: database-name
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_HOST}${SUFFIX}
                      key: database-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_HOST}${SUFFIX}
                      key: database-password
                - name: DEMO_SITE
                  value: ${DEMO_SITE}
                - name: DJANGO_SECRET_KEY
                  value: ${DJANGO_SECRET_KEY}
                - name: DJANGO_DEBUG
                  value: ${DJANGO_DEBUG}
                - name: DJANGO_LOG_LEVEL
                  value: ${DJANGO_LOG_LEVEL}
                - name: SOLR_SERVICE_NAME
                  value: ${SOLR_HOST}${SUFFIX}
                - name: SOLR_CORE_NAME
                  value: ${SOLR_CORE_NAME}
                - name: SKIP_INDEXING_ON_STARTUP
                  value: ${SKIP_INDEXING_ON_STARTUP}
                - name: ENABLE_REALTIME_INDEXING
                  value: ${ENABLE_REALTIME_INDEXING}
                - name: ENABLE_SUGGESTER_REBUILD
                  value: ${ENABLE_SUGGESTER_REBUILD}
                - name: RTI_WAIT_TIME
                  value: ${RTI_WAIT_TIME}
                - name: RTI_MAX_SOLR_BATCH
                  value: ${RTI_MAX_SOLR_BATCH}
                - name: RTI_RAISE_ERRORS
                  value: ${RTI_RAISE_ERRORS}
                - name: RTI_ABORT_ON_ERRORS
                  value: ${RTI_ABORT_ON_ERRORS}
                - name: THEME
                  value: ${THEME}
                - name: APPLICATION_URL
                  value: ${APPLICATION_URL}
                - name: RABBITMQ_SVC_NAME
                  value: ${MSG_QUEUE_HOST}${SUFFIX}
                - name: RABBITMQ_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${MSG_QUEUE_HOST}${SUFFIX}
                      key: default-user
                - name: RABBITMQ_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${MSG_QUEUE_HOST}${SUFFIX}
                      key: default-password
                - name: AGENT_ADMIN_URL
                  value: http://${AGENT_HOST}${SUFFIX}:${AGENT_ADMIN_PORT}
                - name: AGENT_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${AGENT_HOST}${SUFFIX}
                      key: admin-api-key
                - name: USE_AUTHENTICATION
                  value: ${USE_AUTHENTICATION}
                - name: USER_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: api-user
                - name: USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: api-password
                - name: ADMIN_USER_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: admin-user
                - name: ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: admin-password
                - name: FEEDBACK_TARGET_EMAIL
                  valueFrom:
                    secretKeyRef:
                      name: ${EMAIL_SETTINGS_STORE_NAME}${SUFFIX}
                      key: target-email
                - name: SMTP_SERVER_ADDRESS
                  valueFrom:
                    secretKeyRef:
                      name: ${EMAIL_SETTINGS_STORE_NAME}${SUFFIX}
                      key: smtp-host
                - name: TRACE_EVENTS
                  value: ${TRACE_EVENTS}
                - name: RECORD_TIMINGS
                  value: ${RECORD_TIMINGS}
                - name: SP_TRACKING_APP_ID
                  value: ${SP_TRACKING_APP_ID}
                - name: API_VERSION_ROUTING_MIDDLEWARE
                  value: ${API_VERSION_ROUTING_MIDDLEWARE}
                - name: SP_TRACKING_EMITTER
                  value: ${SP_TRACKING_EMITTER}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2beta2
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v2
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 75
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 300
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: api
  - name: ROLE
    displayName: Role
    description: Service Role
    required: true
    value: api
  - name: AGENT_ROLE
    displayName: Agent Role
    description: Agent Role
    required: true
    value: agent
  - name: FRONTEND_ROLE
    displayName: Frontend Role
    description: Frontend Role
    required: true
    value: frontend
  - name: DATABASE_ROLE
    displayName: Database Role
    description: Database Role
    required: true
    value: db
  - name: SEARCH_ENGINE_ROLE
    displayName: Search Engine Role
    description: Search Engine Role
    required: true
    value: search-engine
  - name: MSG_QUEUE_ROLE
    displayName: Message Queue Role
    description: Message Queue Role
    required: true
    value: msg-queue
  - name: NAMESPACE
    displayName: The target namespace for the resources.
    required: true
    value: 8ad0ea
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: -bc
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: orgbook
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: aries-vcr
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: 8ad0ea-tools
  - name: DATABASE_HOST
    displayName: Database Service Name
    description: The name of the database server/service.
    required: true
    value: db
  - name: DATABASE_ENGINE
    displayName: Database Engine
    required: true
    description: "Database engine: postgresql, mysql, or sqlite (default)."
    value: postgresql
  - name: APP_FILE
    displayName: Application File
    description: Used to run the application from a Python script. This should be a path to a Python file (defaults to app.py unless set to null) that will be passed to the Python interpreter to start the application (optional).
    required: false
    value: app-vonx.py
  - name: APP_CONFIG
    displayName: Application Configuration File Path
    description: Relative path to Gunicorn configuration file (optional).
    required: false
    value: ""
  - name: APP_MODULE
    displayName: Application Module
    description: The python module for application startup.
    required: false
    value: api_indy.tob_anchor.boot:init_app
  - name: DJANGO_SECRET_KEY
    displayName: Django Secret Key
    description: Set this to a long random string.
    generate: expression
    from: '[\w]{50}'
  - name: DJANGO_DEBUG
    displayName: Django Debug
    description: If Django is in debug mode
    required: true
    value: "False"
  - name: DJANGO_LOG_LEVEL
    displayName: Django Logging Level
    description: Django logging level.
    required: true
    value: WARN
  - name: SOLR_HOST
    displayName: SOLR Service Name
    description: The name of the service associated with the SOLR search engine.
    required: false
    value: search-engine
  - name: SOLR_CORE_NAME
    displayName: SOLR Core Name
    description: The name of the core to use when connecting with SOLR.
    required: false
    value: credential_registry
  - name: SKIP_INDEXING_ON_STARTUP
    displayName: Skip Indexing On Startup
    description: Set this flag to `true` to skip indexing on startup as part of the database migration; set to `all` to skip indexing and suggester build, set to `false` otherwise.  When there are a large number of records to index, indexing at startup can cause startup delays and issues.
    required: true
    value: all
  - name: ENABLE_REALTIME_INDEXING
    displayName: Enable Realtime Indexing
    description: Flag to enable/disable realtime search indexing.  Set to 1 to enable, leave it blank to disable.  Having realtime indexing enabled during onboarding can cause performance issues.
    required: false
    value: "1"
  - name: ENABLE_SUGGESTER_REBUILD
    displayName: Enable Suggester Rebuild
    description: Flag to enable/disable search suggester rebuilding.  Set to 1 to enable, leave it blank to disable.  Having this enabled can cause issues with very large data-sets.
    required: false
    value: ""
  - name: RTI_WAIT_TIME
    displayName: Realtime Indexing - Wait Time
    description: The number of seconds to wait before draining the solr queue.  Flag to enable/disable raising errors during realtime indexing.  The indexing thread will be killed, and the API instance will continue to run without indexing.  Set to 'true' to enable.  Defaults to 5 sceonds.
    required: false
    value: "5"
  - name: RTI_MAX_SOLR_BATCH
    displayName: Realtime Indexing - Batch Size
    description: The maximum number of items to grouped items to collect before triggering the indexing process.  Defaults to 25.
    required: false
    value: "25"
  - name: RTI_RAISE_ERRORS
    displayName: Realtime Indexing - Raise Errors
    description: Flag to enable/disable raising errors during realtime indexing.  The indexing thread will be killed, and the API instance will continue to run without indexing.  Set to 'true' to enable.  Defaults to false.
    required: false
    value: "false"
  - name: RTI_ABORT_ON_ERRORS
    displayName: Realtime Indexing - Abort On Errors
    description: Overrides RTI_RAISE_ERRORS.  Flag to enable/disable aborting (killing) the API instance when realtime indexing errors are encountered.  Set to 'true' to enable.  Defaults to false.
    required: false
    value: "true"
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    value: dev
    required: true
  - name: MSG_QUEUE_HOST
    displayName: Msg Queue Deployment Name
    description: The name associated to the msg queue deployment resources.  In particular, this is used to wire up the credentials associated to the database.
    required: true
    value: msg-queue
  - name: THEME
    displayName: Thearies-vcr Theme
    description: The theme to use for the tob-api.  This defines which customizations to load for the application.
    required: true
    value: bcgov
  - name: USE_AUTHENTICATION
    displayName: Use Authentication
    description: Enable or disable the use of authentication on the API.  When set to `False` the API will be unprotected.
    required: false
    value: ""
  - name: USER_ID
    displayName: API Username
    description: Username for the account that will be used for accessing the API.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z_][a-zA-Z0-9_]{10}"
  - name: USER_PASSWORD
    displayName: API Password
    description: Password for the account that will be used for accessing the API.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: ADMIN_USER_ID
    displayName: API Admin Username
    description: Username for the API superuser account.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z_][a-zA-Z0-9_]{10}"
  - name: ADMIN_PASSWORD
    displayName: API Admin Password
    description: Password for the API superuser account.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: APPLICATION_URL
    displayName: Application url
    description: This service's url.
    required: true
    value: https://dev.orgbook.gov.bc.ca
  - name: EMAIL_SETTINGS_STORE_NAME
    displayName: Email Settings Store Name
    description: The name of the email settings store (aka The name of the secret that contains the email settings for the application.
    required: true
    value: email-settings
  - name: FEEDBACK_TARGET_EMAIL
    displayName: Feedback Target Url
    description: The email address to which the feedback is to be delivered.
    required: false
    value: ""
  - name: SMTP_SERVER_ADDRESS
    displayName: SMTP Server Address
    description: The SMTP server address used for sending email.
    required: false
    value: ""
  - name: TRACE_EVENTS
    displayName: Trace Events
    description: Trace events.  Enable/Disable tracing.
    required: false
    value: "false"
  - name: RECORD_TIMINGS
    displayName: Record Timings
    description: Record Timings.  Enable/Disable method timings.
    required: false
    value: "false"

  - name: SP_TRACKING_APP_ID
    displayName: Snowplow Tracking Application ID
    description: The application ID for use with Snowplow tracking events.
    required: true
    value: "orgbook_api_dev"
  - name: API_VERSION_ROUTING_MIDDLEWARE
    displayName: API Version Routing Middleware
    description: API Version Routing Middleware
    required: true
    value: vcr_server.middleware.api_tracking.SnowplowTrackingMiddleware
  - name: SP_TRACKING_EMITTER
    displayName: Snowplow Tracking Emitter
    description: Snowplow Tracking Emitter
    required: true
    value: spt.apps.gov.bc.ca

  - name: DEMO_SITE
    displayName: Demo Site Flag
    description: Set to True to indicate the site is a Demo site, False otherwise.
    required: false
    value: "True"
  - name: AGENT_HOST
    displayName: Agent Service name
    description: Agent service name
    required: true
    value: agent
  - name: AGENT_ADMIN_PORT
    displayName: Agent Admin Port
    description: Agent admin port
    required: true
    value: "8024"

  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "2"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "16"

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 300m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
