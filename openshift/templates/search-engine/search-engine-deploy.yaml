kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${NAME}${SUFFIX}-deployment-template
objects:

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the agent and event processor to access the controller.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${CONTROLLER_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
            - podSelector:
                matchLabels:
                  role: ${MSG_QUEUE_WORKER_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
            - podSelector:
                matchLabels:
                  role: ${OFFLINE_INDEXER_ROLE}
                  app: ${OFFLINE_INDEXER_APP_NAME}${OFFLINE_INDEXER_SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: 8983
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: 8983-tcp
          protocol: TCP
          port: 8983
          targetPort: 8983
      selector:
        name: ${NAME}${SUFFIX}
        deploymentconfig: ${NAME}${SUFFIX}
      type: ClusterIP
      sessionAffinity: None

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      storageClassName: ${PERSISTENT_VOLUME_CLASS}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${PERSISTENT_VOLUME_SIZE}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${IMAGE_TAG_NAME}
      replicas: 1
      test: false
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          volumes:
            - name: ${NAME}${SUFFIX}-data
              persistentVolumeClaim:
                claimName: ${NAME}${SUFFIX}
          containers:
            - name: ${NAME}${SUFFIX}
              image: ""
              ports:
                - containerPort: 8983
                  protocol: TCP
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 30
                initialDelaySeconds: 3
                timeoutSeconds: 20
                httpGet:
                  path: /solr/${CORE_NAME}/admin/luke?wt=json&show=index&numTerms=0
                  port: 8983
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 60
                initialDelaySeconds: 30
                timeoutSeconds: 20
                httpGet:
                  path: /solr/${CORE_NAME}/admin/luke?wt=json&show=index&numTerms=0
                  port: 8983
              volumeMounts:
                - name: ${NAME}${SUFFIX}-data
                  mountPath: ${MOUNT_PATH}
              env:
                - name: CORE_NAME
                  value: ${CORE_NAME}
                - name: SOLR_LOG_LEVEL
                  value: ${SOLR_LOG_LEVEL}
                - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
                  value: 'true'
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the resources defined in this template.
    required: true
    value: search-engine
    
  - name: ROLE
    displayName: Role
    description: Service Role
    required: true
    value: search-engine
  - name: CONTROLLER_ROLE
    displayName: Controller Role
    description: Controller Role
    required: true
    value: api
  - name: MSG_QUEUE_WORKER_ROLE
    displayName: Message Queue Worker Role
    description: Message Queue Worker Role
    required: true
    value: msg-queue-worker

  - name: OFFLINE_INDEXER_ROLE
    displayName: Offline Indexer Role
    description: Offline Indexer Role
    required: true
    value: offline-indexer
  - name: OFFLINE_INDEXER_APP_NAME
    displayName: Offline Indexer App Name
    description: Offline Indexer App Name
    required: true
    value: offline-indexing
  - name: OFFLINE_INDEXER_SUFFIX
    displayName: Offline Indexer Suffix
    description: Offline Indexer Suffix
    required: true
    value: -oli

  - name: NAMESPACE
    displayName: The target namespace for the resources.
    required: true
    value: 8ad0ea
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: -bc
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: orgbook
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: aries-vcr
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: 8ad0ea-tools
  - name: IMAGE_TAG_NAME
    displayName: Image TAG name
    description: Image TAG name
    required: true
    value: dev
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev
  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 8Gi
  - name: MOUNT_PATH
    displayName: Mount Path
    description: The path to mount the persistent volume.
    required: true
    value: /var/solr/data
  - name: CORE_NAME
    displayName: Core Name
    description: The name of the Solr core configuration to load.
    required: true
    value: credential_registry
  - name: SOLR_LOG_LEVEL
    displayName: Solr Log Level
    description: Defines the loggin level for Solr.
    required: true
    value: WARN
  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; netapp-file-standard, netapp-file-extended, netapp-block-standard, or netapp-block-extended. netapp-block-standard performs the best for Solr.
    required: false
    value: netapp-block-standard
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 750m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 3000Mi
